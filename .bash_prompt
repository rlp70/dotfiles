# Please call from .bash_rc

case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# Comment this out if you want to "not distract the user." Leave it as is
# if you want to try and make the terminal render colors to help you focus.
#force_color_prompt=yes

if [ -n "$force_color_prompt" ] ; then
    if [ -x /usr/bin/tput ] && tput setaf 1>&/dev/null; then
	# We have color support. Assume it's compliant with Ecma-48 (ISO/IEC-6429).
	# Lack of such support is extremely rare, and such a case woudl tend to
	# support setf rather than setaf.
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ] ; then
    PS1='[\[\033[01;32m\]\u@\h\[\033[00m\]] \[\033[01;36m\]\w\[\033[00m\]\n\$ '
else
    PS1='[\u@\h] \w\n\$ '
fi

unset color_prompt force_color_prompt

# If this is an xterm, set the title to user@host:dir
case "$TERM" in
    xterm*|rxvt*)
	PS1='[\[\033[01;32m\]\u@\h\[\033[00m\]] \[\033[01;36m\]\w\[\033[00m\]\n\$ '
	;;
    *)
	;;
esac

# Color support for ls & stuff
if [ -x /usr/bin/dircolors ] ; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
fi
